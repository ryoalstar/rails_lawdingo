- cache("lawyer/_lawyer/#{lawyer.id}-#{logged_in?}-#{lawyer.updated_at.to_i}", :expires_in => 1.hour) do
  .row.lawyer{:id => "lawyer_#{lawyer.id}", "data-lawyer-id" => lawyer.id, "data-lawyer-slug" => lawyer.slug}
    = hidden_field(:current, :lid)
    .left.row_block
      .avatar
        = link_to image_tag(lawyer.photo.url(:thumb)), attorney_path(lawyer, slug: lawyer.slug)
      =link_to attorney_path(lawyer, slug: lawyer.slug), :target=>"_blank" do
        .view_profile_wrapper
          .view_profile_button.hidden
            View Profile
      - if (lawyer.yelp_business_id.present? && !!lawyer.yelp[:reviews]) || lawyer.reviews.count.to_i > 0
        - if lawyer.yelp_business_id.present? && !!lawyer.yelp[:reviews]
          .stars
            = image_tag lawyer.yelp[:rating_img_url]
            .clear
          .yelp_reviews
            %a{:href => attorney_path(lawyer, slug: lawyer.slug, anchor: "reviews")} 
              = content_tag :span, pluralize(lawyer.yelp[:review_count], "#{link_to image_tag('miniMapLogo.png'), 'http://www.yelp.com'}" + "review").html_safe, class: ""
        - else
          .stars
            - if lawyer.reviews.average(:rating).to_i > 0
              = link_to_unless_current content_tag(:div, "", class: "rating", data: { score: lawyer.reviews.average(:rating).to_i }), attorney_path(lawyer, slug: lawyer.slug, anchor: "reviews"), class: "rating-stars"
          %a{:href => attorney_path(lawyer, slug: lawyer.slug, anchor: "reviews")} 
            = content_tag :span, pluralize(lawyer.reviews.count, "review", "reviews"), class: "reviews"
      .clear
    - bms = []
    - bms = lawyer.bar_memberships unless lawyer.bar_memberships.blank?
    - licenced_states = ""
    - bms.each{ |bm|
    - licenced_states += bm.state.abbreviation + ', ' if !bm.state.nil?
    - }
    - licenced_states.chomp!(', ')
    - pas = []
    - pas = lawyer.practice_areas.parent_practice_areas unless lawyer.practice_areas.blank?
    - pas_string = ""
    - pas.each{|pa|
    - pas_string += pa.name + ', '
    - }
    - pas_string.chomp!(', ')
    - pas_names = pas.map { |area| "#{area.name.downcase}"  }
    - pas_names_last = pas_names.pop
    - pas_names_list = pas_names.empty? ? pas_names_last : "#{pas_names.join(', ')} and #{pas_names_last}"
    - if lawyer.personal_tagline.present?
      - unless params[:controller] == "attorneys"
        - if lawyer.personal_tagline.length < 120
          - lawyer_tagline = "“#{lawyer.personal_tagline}”"
        - else
          - lawyer_tagline = "“" + lawyer.personal_tagline.truncate(120, separator: ' ', omission: "...” #{link_to('read more', attorney_path(lawyer, slug: lawyer.slug))}")
    .middle.row_block
      %h1= link_to_unless_current "#{lawyer.full_name}", attorney_path(lawyer, slug: lawyer.slug)
      .online_icons 
        = render(:partial => "lawyer/online_icons", :locals => {:lawyer => lawyer})
      
      .clear
      .description
        - if lawyer.personal_tagline.present?
          %p.lawyer_tagline.hidden= raw lawyer_tagline
  
        = send_message_from_lawyer_mini_profile lawyer
        .expanded_info.hidden
          - unless lawyer.bar_memberships.blank?
            %ul.bar_memberships
              %li
                Licensed in #{licenced_states}
            - if lawyer.license_year.present?
              %ul.license_years
                %li #{pluralize years_practicing_law(lawyer), "year", "years'"} experience
            .clear
          %ul
            - unless lawyer.practice_areas.blank?
              %li
                Advises on #{@selected_practice_area.present? ? @selected_practice_area.name : raw(pas_names_list) + " law"}
            - if lawyer.offerings.count > 0
              %li.offerings_item
                Offers
                %a.offerings{:href => attorney_path(lawyer, slug: lawyer.slug, anchor: "flat-fee")} #{lawyer.offerings.count} flat-fee #{pluralize(lawyer.offerings.count, 'service').split(" ", 2)[1]}
                .offerings_wrapper
                  %table
                    - lawyer.offerings.each do |offering|
                      %tr
                        %td
                          %span.offering_name 
                            = link_to "#{offering.name}", offering
                        %td
                          %span
                            #{number_to_currency(offering.fee, precision: 0)}
        -#.free
          %table
            %tbody
              %tr
                %td
                  %p= start_or_schedule_button(lawyer)
        .clear
        .free_section_container
          = render(:partial => "lawyer/talk_button", :locals => {:lawyer => lawyer})
          .free_button_explanation
            %p.free_bold= free_message(lawyer)
            = content_tag :p, "then #{number_to_currency (lawyer.rate_for_minutes(6) + AppParameter.service_charge_value)} / 6 mins", class: "small"
        .expander_container
          %span +
          .tooltip.expander See more info
    .right.row_block
      - if lawyer.daily_hours.present?
        .appointments_title
          Available appointments  
        .available-appointments
          = render(:partial => "lawyer/lawyer_appointments", :locals => {:lawyer => lawyer, :ndays=> 2})
          - if lawyer.time_zone       
            .times           
              %span.grey Times in #{lawyer.timezone_abbreviation}
              = "(#{lawyer.timezone_utc_offset}:00)"            
          .clear
        .view_all_wrapper
          %a.appt-select.appointments{:href => '#'}
            View All Appointments
      - else
        .no_appointments
          %p Sorry,
          %p No Appointments
          %p Are Available
  
      - # content for the modal dialog we are going to display
      %div{:style => "display:none;"}
        = render(:partial => "/attorneys/appointment_form", :locals => {:lawyer => lawyer})
  
  :javascript
    $(".row .rating").raty({
        path: "/assets/raty",
        hintList: ['', '', '', '', '', ''],
        readOnly: true,
        start: function() {return $(this).data("score")}
    });
