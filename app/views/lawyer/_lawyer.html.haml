.row.lawyer{:id => "lawyer_#{lawyer.id}", "data-lawyer-id" => lawyer.id}
  = hidden_field(:current, :lid)
  .left.row_block
    .avatar
      = link_to image_tag(lawyer.photo.url(:thumb)), attorney_path(lawyer, slug: lawyer.slug)
    - if (lawyer.yelp_business_id.present? && !!lawyer.yelp[:reviews]) || lawyer.reviews.count.to_i > 0
      - if lawyer.yelp_business_id.present? && !!lawyer.yelp[:reviews]
        .stars
          = image_tag lawyer.yelp[:rating_img_url]
          .clear
        .yelp_reviews
          %a{:href => attorney_path(lawyer, slug: lawyer.slug, anchor: "reviews")} 
            = content_tag :span, pluralize(lawyer.yelp[:review_count], "#{link_to image_tag('miniMapLogo.png'), 'http://www.yelp.com'}" + "review").html_safe, class: ""
      - else
        .stars
          - if lawyer.reviews.average(:rating).to_i > 0
            = link_to_unless_current content_tag(:div, "", class: "rating", data: { score: lawyer.reviews.average(:rating).to_i }), attorney_path(lawyer, slug: lawyer.slug, anchor: "reviews"), class: "rating-stars"
        %a{:href => attorney_path(lawyer, slug: lawyer.slug, anchor: "reviews")} 
          = content_tag :span, pluralize(lawyer.reviews.count, "review", "reviews"), class: "reviews"
    .clear
  - bms = []
  - bms = lawyer.bar_memberships unless lawyer.bar_memberships.blank?
  - licenced_states = ""
  - bms.each{ |bm|
  - licenced_states += bm.state.abbreviation + ', '
  - }
  - licenced_states.chomp!(', ')
  - pas = []
  - pas = lawyer.practice_areas.parent_practice_areas unless lawyer.practice_areas.blank?
  - pas_string = ""
  - pas.each{|pa|
  - pas_string += pa.name + ', '
  - }
  - pas_string.chomp!(', ')
  - pas_names = pas.map { |area| "#{area.name.downcase}"  }
  - pas_names_last = pas_names.pop
  - pas_names_list = pas_names.empty? ? pas_names_last : "#{pas_names.join(', ')} and #{pas_names_last}"        
  .middle.row_block
    %h1= link_to_unless_current "#{lawyer.full_name}", attorney_path(lawyer, slug: lawyer.slug)
    .online_icons
      - if lawyer.is_online
        %span.video.online= start_or_video_button_p(lawyer)
      - else
        %span.video.offline
      - if lawyer.phone.present? 
        %span.voice.online= start_phone_consultation_p(lawyer)
      - else 
        %span.voice.offline
      %span.note= start_or_schedule_button_text_profile(lawyer)
      %span.text
      
      .video_chat.online.tooltip Available for video chat
      .voice_chat.online.tooltip Available for voice chat
      .note_chat.tooltip Ask (text) question
      .text_chat.tooltip No appointments available
      .video_chat.offline.tooltip Not available by video now
      .voice_chat.offline.tooltip Not available by phone now
    .clear
    .description
      - if lawyer.personal_tagline.present?
        %p
          - unless params[:controller] == "attorneys"
            “
            = lawyer.personal_tagline.truncate(120, separator: ' ', omission: "...” #{link_to('read more', attorney_path(lawyer, slug: lawyer.slug))}").html_safe
            - if lawyer.personal_tagline.length < 120
              ”
          - else
            = "“#{lawyer.personal_tagline}”"
      %ul
        - unless lawyer.bar_memberships.blank?
          %li
            Licensed in #{licenced_states}
        - unless lawyer.practice_areas.blank?
          %li
            Advises on #{@selected_practice_area.present? ? @selected_practice_area.name : raw(pas_names_list) + " law"}
        - if lawyer.offerings.count > 0
          - if lawyer.offerings.count == 1
            %li 
              Offers
              %a{:href => attorney_path(lawyer, slug: lawyer.slug, anchor: "flat-fee")} #{lawyer.offerings.count} flat-fee service
          - else
            %li 
              Offers
              %a{:href => attorney_path(lawyer, slug: lawyer.slug, anchor: "flat-fee")} #{lawyer.offerings.count} flat-fee services
        - if lawyer.license_year.present?      
          %li #{pluralize years_practicing_law(lawyer), "year", "years'"} experience
      %a.free{:href=> "#"}
        %p= free_message(lawyer)
        = content_tag :p, "then #{number_to_currency (lawyer.rate + AppParameter.service_charge_value)}/minute", class: "small"
        -#%p.small 
          then 
          = number_to_currency (lawyer.rate + AppParameter.service_charge_value)
          \/minute
      .button_tooltip
        .button-content
          %ul
            - if lawyer.is_online && !lawyer.is_busy
              %li
                = start_or_schedule_button(lawyer)
            - if lawyer.phone.present? 
              %li
                = start_or_schedule_button(lawyer)
            - if lawyer.phone.present? 
              %li
                = start_phone_consultation(lawyer)
            %li
              = start_or_schedule_button_text(lawyer)
            
  - if lawyer.daily_hours.present?      
    .right.row_block

      %p Available appointments

      %div.available-appointments
       
        - lawyer.next_available_days(2).each_with_index do |d, i|
          %ul
            %li.title
              %a{:href => '#', :class => "day-#{i}"} 
                #{d.strftime("%a, %m/%d")}
            - times = lawyer.available_times(d)
            - times[0..2].each do |t|
              %li
                %a.appt-select{:href => "#", "data-time" => t.strftime("%Y-%m-%d %H:%M:%S")}
                  #{t.strftime("%l:%M%p")}
            - if times.length > 3
              %li
                %a{:href => "#"}
                  More                                            
        .clear  
      %a.appt-select.appointments{:href => '#'}
        All available appointments

    - # content for the modal dialog we are going to display
    %div{:style => "display:none;"}
      = render(:partial => "/attorneys/appointment_form", :locals => {:lawyer => lawyer})      
      
        
        
        
        
      

  
:javascript
  $(".row .rating").raty({
      path: "/assets/raty",
      hintList: ['', '', '', '', '', ''],
      readOnly: true,
      start: function() {return $(this).data("score")}
  });
  /*function equalHeight(group) {
    var tallest = 0;
    group.each(function() {
       thisHeight = $(this).height();
       if(thisHeight > tallest) {
          tallest = thisHeight;
       }
    });
    group.height(tallest);
  }
  $(document).ready(function() {
    $('.row').each(function(){
      
      equalHeight($(this).find(".row_block"));
    });
  });*/